name: Continuous Deployment

on:
  # Allow triggering manually. 
  workflow_dispatch:

permissions:
    id-token: write
    contents: read
jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  deploy_infra:
    needs: [ci]
    uses: ./.github/workflows/provision.yml
    secrets: inherit

  push_to_acr:
    needs: [deploy_infra]
    uses: ./.github/workflows/build_and_push.yml
    secrets: inherit

  deploy_to_container_app:
    needs: [push_to_acr]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Azure authentication
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy ServiceBusWorker to Container App
        uses: azure/bicep-deploy@v1
        with:
          type: deployment
          operation: create
          name: 'ServiceBusWorkerDeployment-${{ github.run_id }}'
          scope: resourceGroup
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          template-file: ./infra/worker-app.bicep
          parameters: '{"blobConnectionString": "https://${{ vars.INFRA_STORAGE_ACCOUNT_NAME}}.blob.core.windows.net",
           "imageName": "${{ vars.INFRA_ACR_NAME }}.azurecr.io/service-bus-worker:${{ github.sha }}",
           "managedEnvironmentName": "${{ vars.INFRA_MANAGED_ENVIRONMENT_NAME }}",
           "openAIConnectionString": "https://${{vars.INFRA_AZURE_OPENAI_NAME}}.openai.azure.com/",
           "openAIModelDeploymentName": "${{vars.INFRA_AZURE_OPENAI_MODEL_DEPLOYMENT_NAME}}",
           "registryName": "${{vars.INFRA_ACR_NAME}}",
           "serviceBusConnectionString": "${{vars.INFRA_SERVICE_BUS_NAMESPACE_NAME}}.servicebus.windows.net",
           "serviceBusQueueName": "${{vars.INFRA_SERVICE_BUS_QUEUE_NAME}}",
           "userAssignedIdentityName": "${{vars.USER_ASSIGNED_IDENTITY_NAME}}"
           }'

      - name: Deploy Web App to Container App
        uses: azure/bicep-deploy@v1
        with:
          type: deployment
          operation: create
          name: 'WebAppDeployment-${{ github.run_id }}'
          scope: resourceGroup
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          template-file: ./infra/web-app.bicep
          parameters: '{
           "imageName": "${{ vars.INFRA_ACR_NAME }}.azurecr.io/service-bus-worker:${{ github.sha }}",
           "managedEnvironmentName": "${{ vars.INFRA_MANAGED_ENVIRONMENT_NAME }}",
           "userAssignedIdentityName": "${{vars.USER_ASSIGNED_IDENTITY_NAME}}",
           "registryName": "${{vars.INFRA_ACR_NAME}}",
           "serviceBusConnectionString": "${{vars.INFRA_SERVICE_BUS_NAMESPACE_NAME}}.servicebus.windows.net",
           "serviceBusQueueName": "${{vars.INFRA_SERVICE_BUS_QUEUE_NAME}}"
           }'

      - name: Azure CLI logout
        run: az logout