name: Continuous Deployment

on:
  # Allow triggering manually. 
  workflow_dispatch:

permissions:
    id-token: write
    contents: read
jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  deploy_infra:
    needs: [ci]
    uses: ./.github/workflows/provision.yml

  push_to_acr:
    needs: [deploy_infra]
    uses: ./.github/workflows/build_and_push.yml

  deploy_to_container_app:
    needs: [push_to_acr]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy ServiceBusWorker to Container App
        uses: azure/bicep-deploy@v1
        with:
          type: deployment
          operation: create
          name: 'ServiceBusWorkerDeployment-${{ github.run_id }}'
          scope: resourceGroup
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          template-file: ./infra/worker-app.bicep
          parameters: '{"blobConnectionString": "https://${{ vars.INFRA_STORAGE_ACCOUNT_NAME}}.blob.core.windows.net",
           "imageName": "${{ vars.INFRA_ACR_NAME }}.azurecr.io/service-bus-worker:${{ github.sha }}",
           "managedEnvironmentName": "${{ vars.INFRA_MANAGED_ENVIRONMENT_NAME }}",
           "openAIConnectionString": "https://${{vars.INFRA_AZURE_OPENAI_NAME}}.openai.azure.com/",
           "openAIModelDeploymentName": "${{vars.INFRA_AZURE_OPENAI_MODEL_DEPLOYMENT_NAME}}",
           "registryName": "${{vars.INFRA_ACR_NAME}}",
           "serviceBusConnectionString": "${{vars.INFRA_SERVICE_BUS_NAMESPACE_NAME}}.servicebus.windows.net",
           "serviceBusQueueName": "${{vars.INFRA_SERVICE_BUS_QUEUE_NAME}}",
           "userAssignedIdentityName": "${{vars.USER_ASSIGNED_IDENTITY_NAME}}"
           }'
      - name: Azure CLI logout
        run: az logout
    # runs-on: ubuntu-latest

    # steps:
    # - name: Checkout repository
    #   uses: actions/checkout@main

    # - name: Azure authentication
    #   uses: azure/login@v1
    #   with:
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v2
    #   with:
    #     dotnet-version: '9.0.x'
    
    # # - name: Build and publish ServiceBusWorker
    # #   run: dotnet publish -c Release -o out
    # #   working-directory: src/ServiceBusWorker

    # - name: Build Docker image for ServiceBusWorker
    #   run: dotnet publish --os linux --arch x64 /t:PublishContainer -p ContainerImageTag="${{ github.sha }}"
    #   working-directory: src/ServiceBusWorker

    # - name: Login to Azure Container Registry
    #   run: |
    #     az acr login --name ${{ vars.INFRA_ACR_NAME }}
    
    # - name: Create alias for the ServiceBusWorker
    #   run: |
    #     docker tag servicebusworker:${{ github.sha }} ${{ vars.INFRA_ACR_NAME }}.azurecr.io/service-bus-worker:${{ github.sha }}

    # - name: Push ServiceBusWorker image to Azure Container Registry
    #   run: |
    #     docker push ${{ vars.INFRA_ACR_NAME }}.azurecr.io/service-bus-worker:${{ github.sha }}

    # - name: Deploy ServiceBusWorker to Container App
    #   uses: azure/bicep-deploy@v1
    #   with:
    #     type: deployment
    #     operation: create
    #     name: 'ServiceBusWorkerDeployment-${{ github.run_id }}'
    #     scope: resourceGroup
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #     resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
    #     template-file: ./infra/worker-app.bicep
    #     parameters: '{"blobConnectionString": "https://${{ vars.INFRA_STORAGE_ACCOUNT_NAME}}.blob.core.windows.net", "imageName": "${{ vars.INFRA_ACR_NAME }}.azurecr.io/service-bus-worker:${{ github.sha }}", "managedEnvironmentName": "${{ vars.INFRA_MANAGED_ENVIRONMENT_NAME }}", "openAIConnectionString": "https://${{vars.INFRA_AZURE_OPENAI_NAME}}.openai.azure.com/", "openAIModelDeploymentName": "${{vars.INFRA_AZURE_OPENAI_MODEL_DEPLOYMENT_NAME}}", "registryName": "${{vars.INFRA_ACR_NAME}}", "serviceBusConnectionString": "${{vars.INFRA_SERVICE_BUS_NAMESPACE_NAME}}.servicebus.windows.net", "serviceBusQueueName": "${{vars.INFRA_SERVICE_BUS_QUEUE_NAME}}", "userAssignedIdentityName": "${{vars.USER_ASSIGNED_IDENTITY_NAME}}"}'